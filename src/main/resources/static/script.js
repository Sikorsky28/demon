document.addEventListener("DOMContentLoaded", () => {
  // --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ---
  const registerForm = document.getElementById("registerForm");
  if (registerForm) {
    registerForm.addEventListener("submit", async (e) => {
      e.preventDefault();

      const username = document.getElementById("username").value;
      const password = document.getElementById("password").value;
      const age = document.getElementById("age").value;
      const weight = document.getElementById("weight").value;
      const activityLevel = document.getElementById("activityLevel").value;

      try {
        const res = await fetch("http://localhost:8080/auth/register", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ username, password, age, weight, activityLevel })
        });

        const text = await res.text();
        if (res.ok) {
          alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!");
          window.location.href = "login.html";
        } else {
          alert("–û—à–∏–±–∫–∞: " + text);
        }
      } catch (err) {
        alert("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞");
        console.error(err);
      }
    });
  }

  // --- –í—Ö–æ–¥ ---
  const loginForm = document.getElementById("loginForm");
  if (loginForm) {
    loginForm.addEventListener("submit", async (e) => {
      e.preventDefault();

      const username = document.getElementById("username").value;
      const password = document.getElementById("password").value;

      try {
        const res = await fetch("http://localhost:8080/auth/login", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ username, password })
        });

        const data = await res.json();

        if (res.ok) {
          localStorage.setItem("jwtToken", data.token);
          localStorage.setItem("refreshToken", data.refreshToken);
          localStorage.setItem("username", username);
          window.location.href = "dashboard.html";
        } else {
          alert("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: " + (data.message || "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å"));
        }
      } catch (err) {
        alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏");
        console.error(err);
      }
    });
  }

  // --- –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç ---
  if (window.location.pathname.includes("dashboard.html")) {
    const token = localStorage.getItem("jwtToken");
    const refreshToken = localStorage.getItem("refreshToken");
    const username = localStorage.getItem("username");

    if (!token || !username) {
      alert("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã");
      window.location.href = "login.html";
      return;
    }

    async function fetchWithTokenRetry(url, options) {
      const res = await fetch(url, options);

      if (res.status === 401 && refreshToken) {
        // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
        const refreshed = await fetch("http://localhost:8080/auth/refresh", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ refreshToken })
        });

        if (refreshed.ok) {
          const data = await refreshed.json();
          localStorage.setItem("jwtToken", data.token);

          // –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
          options.headers["Authorization"] = `Bearer ${data.token}`;
          return fetch(url, options);
        } else {
          alert("–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ");
          window.location.href = "login.html";
        }
      }

      return res;
    }

    // --- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    fetchWithTokenRetry(`http://localhost:8080/auth/user/${username}`, {
      method: "GET",
      headers: {
        "Authorization": `Bearer ${token}`,
        "Content-Type": "application/json"
      }
    })
      .then(res => res.ok ? res.json() : Promise.reject(res))
      .then(data => {
        document.getElementById("userInfo").innerHTML = `
          <h2>–ü—Ä–∏–≤–µ—Ç, ${data.username}!</h2>
          <p><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ${data.age}</p>
          <p><strong>–í–µ—Å:</strong> ${data.weight}</p>
          <p><strong>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong> ${data.activityLevel}</p>
          <button id="generateMenu">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Ü–∏–æ–Ω</button>
        `;

        // --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ–Ω—é ---
        document.getElementById("generateMenu").addEventListener("click", async () => {
          const token = localStorage.getItem("jwtToken");

          const res = await fetchWithTokenRetry(`http://localhost:8080/mealplan/${data.age}/${data.weight}/${encodeURIComponent(data.activityLevel)}`, {
            method: "GET",
            headers: {
              "Authorization": `Bearer ${token}`,
              "Content-Type": "application/json"
            }
          });

          if (res.ok) {
            const mealPlan = await res.text();
            document.getElementById("nutritionInfo").innerHTML = `
              <h3>üìã –í–∞—à–µ –º–µ–Ω—é:</h3>
              <pre>${mealPlan}</pre>
            `;
          } else {
            alert("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–∞—Ü–∏–æ–Ω–∞");
          }
        });
      })
      .catch(async err => {
        const msg = await err.text?.() || "–û—à–∏–±–∫–∞";
        alert(msg);
        window.location.href = "login.html";
      });
  }
});
